{"version":3,"sources":["panels/Home.tsx","panels/Search.tsx","App.tsx","index.ts"],"names":["Home","vibrate","navigator","connect","supports","sendPromise","style","this","props","id","go","fetchedUser","before","photo_200","src","description","city","title","first_name","last_name","size","level","onClick","canVibrate","React","Component","osName","platform","Search","left","IOS","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","send","ReactDOM","render","createElement","getElementById"],"mappings":"ilBAKqBA,E,2MASjBC,QAAU,WACFC,UAAUD,QACVC,UAAUD,QAAQ,KAEbE,IAAQC,SAAS,iCACtBD,IAAQE,YAAY,+BAAgC,CAACC,MAAO,Y,wEAI1D,IAAD,EACyBC,KAAKC,MAA5BC,EADF,EACEA,GAAIC,EADN,EACMA,GAAIC,EADV,EACUA,YACf,OACC,kBAAC,IAAD,CAAOF,GAAIA,GACJ,kBAAC,IAAD,+DACCE,GACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CACCC,OAAQD,EAAYE,UAAY,kBAAC,IAAD,CAAQC,IAAKH,EAAYE,YAAe,KACxEE,YAAaJ,EAAYK,MAAQL,EAAYK,KAAKC,MAAQN,EAAYK,KAAKC,MAAQ,IAFpF,UAIKN,EAAYO,WAJjB,YAI+BP,EAAYQ,aAKjC,kBAAC,IAAD,CAAOF,MAAK,eAAUf,UAAUD,QAApB,gBAAmCE,IAAQC,SAAS,gCAApD,iBAA4FD,IAAQC,SAAS,wCACrH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQgB,KAAK,KAAKC,MAAM,IAAIC,QAAS,kBAAMZ,EAAG,YAA9C,iGAIJ,kBAAC,IAAD,KACKH,KAAKgB,YAAc,kBAAC,IAAD,CAAQH,KAAK,KAAKC,MAAM,IAAIC,QAASf,KAAKN,SAA1C,yD,iCAnCpC,QAASC,UAAUD,SAAWE,IAAQC,SAAS,oC,GANrBoB,IAAMC,W,kCCElCC,EAASC,cAcAC,EAZ2D,SAAApB,GAAK,OAC3E,kBAAC,IAAD,CAAOC,GAAID,EAAMC,IACb,kBAAC,IAAD,CACIoB,KAAM,kBAAC,IAAD,CAAcP,QAAS,kBAAMd,EAAME,GAAG,UACvCgB,IAAWI,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAFjD,oCC6BOC,EA/BH,WAAO,IAAD,EACwBC,mBAAS,QADjC,mBACPC,EADO,KACMC,EADN,OAEiBF,mBAA0B,MAF3C,mBAEPrB,EAFO,KAEMwB,EAFN,OAGcH,mBAA6B,kBAAC,IAAD,CAAeZ,KAAK,WAH/D,mBAGPgB,EAHO,KAGCC,EAHD,KAuBd,OAlBAC,qBAAU,WAAM,4CASZ,4BAAAC,EAAA,sEACuBpC,IAAQE,YAAY,uBAD3C,OACUmC,EADV,OAEIL,EAAQK,GACRH,EAAU,MAHd,4CATY,sBACZlC,IAAQsC,WAAU,YAA6B,IAAD,IAA1BC,OAASC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC/B,GAAa,yBAATD,EAAiC,CACjC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAASJ,EAA0BK,QAAU,eAC7DH,SAASI,KAAKC,WAAWC,aAAaP,OALlC,mCAeZQ,KACD,IAGC,kBAAC,IAAD,CAAMpB,YAAaA,EAAaG,OAAQA,GACpC,kBAAC,EAAD,CAAM3B,GAAG,OAAOE,YAAaA,EAAaD,GAAIwB,IAC9C,kBAAC,EAAD,CAAQzB,GAAG,SAASC,GAAIwB,MC3BpC/B,IAAQmD,KAAK,gBAEbC,IAASC,OAAOhC,IAAMiC,cAAc1B,GAAMe,SAASY,eAAe,W","file":"static/js/main.e16a7e97.chunk.js","sourcesContent":["import React from 'react'\nimport {Panel, PanelHeader, Button, Group, Div, Cell, Avatar} from '@vkontakte/vkui'\nimport connect, {UserInfo} from '@vkontakte/vk-connect'\n\n\nexport default class Home extends React.Component<{\n\tid: string\n\tgo: (id: string) => void\n\tfetchedUser: UserInfo | null\n}> {\n    get canVibrate() {\n        return !!navigator.vibrate || connect.supports('VKWebAppTapticImpactOccurred')\n    }\n\n    vibrate = () => {\n        if (navigator.vibrate) {\n            navigator.vibrate(200)\n        }\n        else if (connect.supports('VKWebAppTapticImpactOccurred')) {\n            connect.sendPromise('VKWebAppTapticImpactOccurred', {style: 'medium'})\n        }\n    }\n\n    render() {\n        const {id, go, fetchedUser} = this.props\n        return (\n        \t<Panel id={id}>\n                <PanelHeader>Коснуться</PanelHeader>\n                {fetchedUser &&\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t</Group>\n                }\n\n                <Group title={`V: ${!!navigator.vibrate}, T: ${connect.supports('VKWebAppTapticImpactOccurred')}, T2: ${connect.supports('VKWebAppTapticNotificationOccurred')}`}>\n                    <Div>\n                        <Button size=\"xl\" level=\"2\" onClick={() => go('search')}>\n                            Выбрать из друзей\n                        </Button>\n                    </Div>\n                    <Div>\n                        {this.canVibrate && <Button size=\"xl\" level=\"2\" onClick={this.vibrate}>\n                            Вибрация\n                        </Button>}\n                    </Div>\n                </Group>\n            </Panel>\n        )\n    }\n}\n","import React, {FunctionComponent} from 'react'\nimport {platform, IOS} from '@vkontakte/vkui'\nimport {Panel,PanelHeader, HeaderButton} from '@vkontakte/vkui'\n\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back'\nimport Icon24Back from '@vkontakte/icons/dist/24/back'\n\nconst osName = platform()\n\nconst Search: FunctionComponent<{id: string, go: (id: string) => void}> = props => (\n    <Panel id={props.id}>\n        <PanelHeader\n            left={<HeaderButton onClick={() => props.go('home')}>\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n            </HeaderButton>}\n        >\n            Поиск\n        </PanelHeader>\n    </Panel>\n)\n\nexport default Search\n","import React, {useState, useEffect} from 'react'\nimport connect, {UpdateConfigData, UserInfo} from '@vkontakte/vk-connect'\nimport {View, ScreenSpinner} from '@vkontakte/vkui'\n\nimport '@vkontakte/vkui/dist/vkui.css'\n\nimport Home from './panels/Home'\nimport Search from './panels/Search'\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('home')\n    const [fetchedUser, setUser] = useState<null | UserInfo>(null)\n    const [popout, setPopout] = useState<JSX.Element | null>(<ScreenSpinner size='large'/>)\n\n    useEffect(() => {\n        connect.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme')\n                schemeAttribute.value = (data as UpdateConfigData).scheme || 'client_light'\n                document.body.attributes.setNamedItem(schemeAttribute)\n            }\n        })\n\n        async function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo')\n            setUser(user)\n            setPopout(null)\n        }\n\n        fetchData()\n    }, [])\n\n    return (\n        <View activePanel={activePanel} popout={popout}>\n            <Home id='home' fetchedUser={fetchedUser} go={setActivePanel}/>\n            <Search id='search' go={setActivePanel}/>\n        </View>\n    )\n}\n\nexport default App\n\n","import 'core-js/features/map'\nimport 'core-js/features/set'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport connect from '@vkontakte/vk-connect'\nimport App from './App'\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit')\n\nReactDOM.render(React.createElement(App), document.getElementById('root'))\n"],"sourceRoot":""}